//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DBModel", "FK_Field", "Field", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Model2.Field), "CoefMapBundle", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Model2.FieldMap), true)]
[assembly: EdmRelationshipAttribute("DBModel", "FK_Week", "Week", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Model2.Week), "CoefMapBundle", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Model2.FieldMap), true)]
[assembly: EdmRelationshipAttribute("DBModel", "FK_DayAchievements_Weels", "Week", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Model2.Week), "DayAchievement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Model2.DayAchievement), true)]
[assembly: EdmRelationshipAttribute("DBModel", "FK_TasksFields", "Field", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Model2.Field), "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Model2.Task), true)]
[assembly: EdmRelationshipAttribute("DBModel", "FK_LoggedWorks_Tasks", "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Model2.Task), "LoggedWork", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Model2.LoggedWork), true)]
[assembly: EdmRelationshipAttribute("DBModel", "FK_TasksWeeks", "Week", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Model2.Week), "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Model2.Task), true)]
[assembly: EdmRelationshipAttribute("DBModel", "FK_LoggedWork_DayAchievement", "DayAchievement", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Model2.DayAchievement), "LoggedWork", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Model2.LoggedWork), true)]
[assembly: EdmRelationshipAttribute("DBModel", "FK_DayAchievements_Weels1", "DayAchievement", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Model2.DayAchievement), "DayAchievement1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Model2.DayAchievement), true)]

#endregion

namespace Model2
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ModelEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ModelEntities object using the connection string found in the 'ModelEntities' section of the application configuration file.
        /// </summary>
        public ModelEntities() : base("name=ModelEntities", "ModelEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ModelEntities object.
        /// </summary>
        public ModelEntities(string connectionString) : base(connectionString, "ModelEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ModelEntities object.
        /// </summary>
        public ModelEntities(EntityConnection connection) : base(connection, "ModelEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FieldMap> CoefMapBundle
        {
            get
            {
                if ((_CoefMapBundle == null))
                {
                    _CoefMapBundle = base.CreateObjectSet<FieldMap>("CoefMapBundle");
                }
                return _CoefMapBundle;
            }
        }
        private ObjectSet<FieldMap> _CoefMapBundle;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Field> Field
        {
            get
            {
                if ((_Field == null))
                {
                    _Field = base.CreateObjectSet<Field>("Field");
                }
                return _Field;
            }
        }
        private ObjectSet<Field> _Field;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Week> Week
        {
            get
            {
                if ((_Week == null))
                {
                    _Week = base.CreateObjectSet<Week>("Week");
                }
                return _Week;
            }
        }
        private ObjectSet<Week> _Week;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DayAchievement> DayAchievement
        {
            get
            {
                if ((_DayAchievement == null))
                {
                    _DayAchievement = base.CreateObjectSet<DayAchievement>("DayAchievement");
                }
                return _DayAchievement;
            }
        }
        private ObjectSet<DayAchievement> _DayAchievement;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoggedWork> LoggedWork
        {
            get
            {
                if ((_LoggedWork == null))
                {
                    _LoggedWork = base.CreateObjectSet<LoggedWork>("LoggedWork");
                }
                return _LoggedWork;
            }
        }
        private ObjectSet<LoggedWork> _LoggedWork;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Task> Task
        {
            get
            {
                if ((_Task == null))
                {
                    _Task = base.CreateObjectSet<Task>("Task");
                }
                return _Task;
            }
        }
        private ObjectSet<Task> _Task;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CoefMapBundle EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCoefMapBundle(FieldMap fieldMap)
        {
            base.AddObject("CoefMapBundle", fieldMap);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Field EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToField(Field field)
        {
            base.AddObject("Field", field);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Week EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWeek(Week week)
        {
            base.AddObject("Week", week);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DayAchievement EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDayAchievement(DayAchievement dayAchievement)
        {
            base.AddObject("DayAchievement", dayAchievement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoggedWork EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoggedWork(LoggedWork loggedWork)
        {
            base.AddObject("LoggedWork", loggedWork);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Task EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTask(Task task)
        {
            base.AddObject("Task", task);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBModel", Name="DayAchievement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DayAchievement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DayAchievement object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="iD_Week">Initial value of the ID_Week property.</param>
        public static DayAchievement CreateDayAchievement(global::System.Int32 id, global::System.DateTime date, global::System.Int32 iD_Week)
        {
            DayAchievement dayAchievement = new DayAchievement();
            dayAchievement.ID = id;
            dayAchievement.Date = date;
            dayAchievement.ID_Week = iD_Week;
            return dayAchievement;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_Week
        {
            get
            {
                return _ID_Week;
            }
            set
            {
                OnID_WeekChanging(value);
                ReportPropertyChanging("ID_Week");
                _ID_Week = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID_Week");
                OnID_WeekChanged();
            }
        }
        private global::System.Int32 _ID_Week;
        partial void OnID_WeekChanging(global::System.Int32 value);
        partial void OnID_WeekChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_DayAchievements_Weels", "Week")]
        public Week Week
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Week>("DBModel.FK_DayAchievements_Weels", "Week").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Week>("DBModel.FK_DayAchievements_Weels", "Week").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Week> WeekReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Week>("DBModel.FK_DayAchievements_Weels", "Week");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Week>("DBModel.FK_DayAchievements_Weels", "Week", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_LoggedWork_DayAchievement", "LoggedWork")]
        public EntityCollection<LoggedWork> LoggedWork
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoggedWork>("DBModel.FK_LoggedWork_DayAchievement", "LoggedWork");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoggedWork>("DBModel.FK_LoggedWork_DayAchievement", "LoggedWork", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_DayAchievements_Weels1", "DayAchievement1")]
        public EntityCollection<DayAchievement> DayAchievement1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DayAchievement>("DBModel.FK_DayAchievements_Weels1", "DayAchievement1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DayAchievement>("DBModel.FK_DayAchievements_Weels1", "DayAchievement1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_DayAchievements_Weels1", "DayAchievement")]
        public DayAchievement DayAchievement2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DayAchievement>("DBModel.FK_DayAchievements_Weels1", "DayAchievement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DayAchievement>("DBModel.FK_DayAchievements_Weels1", "DayAchievement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DayAchievement> DayAchievement2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DayAchievement>("DBModel.FK_DayAchievements_Weels1", "DayAchievement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DayAchievement>("DBModel.FK_DayAchievements_Weels1", "DayAchievement", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBModel", Name="Field")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Field : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Field object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Field CreateField(global::System.Int32 id, global::System.String name)
        {
            Field field = new Field();
            field.ID = id;
            field.Name = name;
            return field;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_Field", "CoefMapBundle")]
        public EntityCollection<FieldMap> FieldMap
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FieldMap>("DBModel.FK_Field", "CoefMapBundle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FieldMap>("DBModel.FK_Field", "CoefMapBundle", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_TasksFields", "Task")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("DBModel.FK_TasksFields", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("DBModel.FK_TasksFields", "Task", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBModel", Name="FieldMap")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FieldMap : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FieldMap object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="iD_Week">Initial value of the ID_Week property.</param>
        /// <param name="iD_Field">Initial value of the ID_Field property.</param>
        /// <param name="coefficient">Initial value of the Coefficient property.</param>
        public static FieldMap CreateFieldMap(global::System.Int32 id, global::System.Int32 iD_Week, global::System.Int32 iD_Field, global::System.Single coefficient)
        {
            FieldMap fieldMap = new FieldMap();
            fieldMap.ID = id;
            fieldMap.ID_Week = iD_Week;
            fieldMap.ID_Field = iD_Field;
            fieldMap.Coefficient = coefficient;
            return fieldMap;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_Week
        {
            get
            {
                return _ID_Week;
            }
            set
            {
                OnID_WeekChanging(value);
                ReportPropertyChanging("ID_Week");
                _ID_Week = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID_Week");
                OnID_WeekChanged();
            }
        }
        private global::System.Int32 _ID_Week;
        partial void OnID_WeekChanging(global::System.Int32 value);
        partial void OnID_WeekChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_Field
        {
            get
            {
                return _ID_Field;
            }
            set
            {
                OnID_FieldChanging(value);
                ReportPropertyChanging("ID_Field");
                _ID_Field = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID_Field");
                OnID_FieldChanged();
            }
        }
        private global::System.Int32 _ID_Field;
        partial void OnID_FieldChanging(global::System.Int32 value);
        partial void OnID_FieldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Coefficient
        {
            get
            {
                return _Coefficient;
            }
            set
            {
                OnCoefficientChanging(value);
                ReportPropertyChanging("Coefficient");
                _Coefficient = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Coefficient");
                OnCoefficientChanged();
            }
        }
        private global::System.Single _Coefficient;
        partial void OnCoefficientChanging(global::System.Single value);
        partial void OnCoefficientChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_Field", "Field")]
        public Field Field
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("DBModel.FK_Field", "Field").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("DBModel.FK_Field", "Field").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Field> FieldReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("DBModel.FK_Field", "Field");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Field>("DBModel.FK_Field", "Field", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_Week", "Week")]
        public Week Week
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Week>("DBModel.FK_Week", "Week").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Week>("DBModel.FK_Week", "Week").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Week> WeekReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Week>("DBModel.FK_Week", "Week");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Week>("DBModel.FK_Week", "Week", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBModel", Name="LoggedWork")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoggedWork : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoggedWork object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="iD_Task">Initial value of the ID_Task property.</param>
        /// <param name="iD_DayAcievement">Initial value of the ID_DayAcievement property.</param>
        public static LoggedWork CreateLoggedWork(global::System.Int32 id, global::System.Int32 value, global::System.Int32 iD_Task, global::System.Int32 iD_DayAcievement)
        {
            LoggedWork loggedWork = new LoggedWork();
            loggedWork.ID = id;
            loggedWork.Value = value;
            loggedWork.ID_Task = iD_Task;
            loggedWork.ID_DayAcievement = iD_DayAcievement;
            return loggedWork;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Int32 _Value;
        partial void OnValueChanging(global::System.Int32 value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_Task
        {
            get
            {
                return _ID_Task;
            }
            set
            {
                OnID_TaskChanging(value);
                ReportPropertyChanging("ID_Task");
                _ID_Task = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID_Task");
                OnID_TaskChanged();
            }
        }
        private global::System.Int32 _ID_Task;
        partial void OnID_TaskChanging(global::System.Int32 value);
        partial void OnID_TaskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_DayAcievement
        {
            get
            {
                return _ID_DayAcievement;
            }
            set
            {
                OnID_DayAcievementChanging(value);
                ReportPropertyChanging("ID_DayAcievement");
                _ID_DayAcievement = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID_DayAcievement");
                OnID_DayAcievementChanged();
            }
        }
        private global::System.Int32 _ID_DayAcievement;
        partial void OnID_DayAcievementChanging(global::System.Int32 value);
        partial void OnID_DayAcievementChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_LoggedWorks_Tasks", "Task")]
        public Task Task
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("DBModel.FK_LoggedWorks_Tasks", "Task").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("DBModel.FK_LoggedWorks_Tasks", "Task").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Task> TaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("DBModel.FK_LoggedWorks_Tasks", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Task>("DBModel.FK_LoggedWorks_Tasks", "Task", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_LoggedWork_DayAchievement", "DayAchievement")]
        public DayAchievement DayAchievement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DayAchievement>("DBModel.FK_LoggedWork_DayAchievement", "DayAchievement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DayAchievement>("DBModel.FK_LoggedWork_DayAchievement", "DayAchievement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DayAchievement> DayAchievementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DayAchievement>("DBModel.FK_LoggedWork_DayAchievement", "DayAchievement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DayAchievement>("DBModel.FK_LoggedWork_DayAchievement", "DayAchievement", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBModel", Name="NumberTask")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NumberTask : Task
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NumberTask object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isDebted">Initial value of the IsDebted property.</param>
        /// <param name="iD_Week">Initial value of the ID_Week property.</param>
        /// <param name="iD_Field">Initial value of the ID_Field property.</param>
        /// <param name="current">Initial value of the Current property.</param>
        /// <param name="coefficient">Initial value of the Coefficient property.</param>
        public static NumberTask CreateNumberTask(global::System.Int32 id, global::System.String name, global::System.Boolean isDebted, global::System.Int32 iD_Week, global::System.Int32 iD_Field, global::System.Int32 current, global::System.Single coefficient)
        {
            NumberTask numberTask = new NumberTask();
            numberTask.ID = id;
            numberTask.Name = name;
            numberTask.IsDebted = isDebted;
            numberTask.ID_Week = iD_Week;
            numberTask.ID_Field = iD_Field;
            numberTask.Current = current;
            numberTask.Coefficient = coefficient;
            return numberTask;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Norma
        {
            get
            {
                return _Norma;
            }
            set
            {
                OnNormaChanging(value);
                ReportPropertyChanging("Norma");
                _Norma = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Norma");
                OnNormaChanged();
            }
        }
        private Nullable<global::System.Int32> _Norma;
        partial void OnNormaChanging(Nullable<global::System.Int32> value);
        partial void OnNormaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Unit
        {
            get
            {
                return _Unit;
            }
            set
            {
                OnUnitChanging(value);
                ReportPropertyChanging("Unit");
                _Unit = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Unit");
                OnUnitChanged();
            }
        }
        private global::System.String _Unit;
        partial void OnUnitChanging(global::System.String value);
        partial void OnUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> OnceADay
        {
            get
            {
                return _OnceADay;
            }
            set
            {
                OnOnceADayChanging(value);
                ReportPropertyChanging("OnceADay");
                _OnceADay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OnceADay");
                OnOnceADayChanged();
            }
        }
        private Nullable<global::System.Boolean> _OnceADay;
        partial void OnOnceADayChanging(Nullable<global::System.Boolean> value);
        partial void OnOnceADayChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBModel", Name="PercentTask")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PercentTask : Task
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PercentTask object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isDebted">Initial value of the IsDebted property.</param>
        /// <param name="iD_Week">Initial value of the ID_Week property.</param>
        /// <param name="iD_Field">Initial value of the ID_Field property.</param>
        /// <param name="current">Initial value of the Current property.</param>
        /// <param name="coefficient">Initial value of the Coefficient property.</param>
        public static PercentTask CreatePercentTask(global::System.Int32 id, global::System.String name, global::System.Boolean isDebted, global::System.Int32 iD_Week, global::System.Int32 iD_Field, global::System.Int32 current, global::System.Single coefficient)
        {
            PercentTask percentTask = new PercentTask();
            percentTask.ID = id;
            percentTask.Name = name;
            percentTask.IsDebted = isDebted;
            percentTask.ID_Week = iD_Week;
            percentTask.ID_Field = iD_Field;
            percentTask.Current = current;
            percentTask.Coefficient = coefficient;
            return percentTask;
        }

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBModel", Name="Task")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(NumberTask))]
    [KnownTypeAttribute(typeof(PercentTask))]
    public abstract partial class Task : EntityObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDebted
        {
            get
            {
                return _IsDebted;
            }
            set
            {
                OnIsDebtedChanging(value);
                ReportPropertyChanging("IsDebted");
                _IsDebted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDebted");
                OnIsDebtedChanged();
            }
        }
        private global::System.Boolean _IsDebted;
        partial void OnIsDebtedChanging(global::System.Boolean value);
        partial void OnIsDebtedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_Week
        {
            get
            {
                return _ID_Week;
            }
            set
            {
                OnID_WeekChanging(value);
                ReportPropertyChanging("ID_Week");
                _ID_Week = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID_Week");
                OnID_WeekChanged();
            }
        }
        private global::System.Int32 _ID_Week;
        partial void OnID_WeekChanging(global::System.Int32 value);
        partial void OnID_WeekChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_Field
        {
            get
            {
                return _ID_Field;
            }
            set
            {
                OnID_FieldChanging(value);
                ReportPropertyChanging("ID_Field");
                _ID_Field = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID_Field");
                OnID_FieldChanged();
            }
        }
        private global::System.Int32 _ID_Field;
        partial void OnID_FieldChanging(global::System.Int32 value);
        partial void OnID_FieldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Current
        {
            get
            {
                return _Current;
            }
            set
            {
                OnCurrentChanging(value);
                ReportPropertyChanging("Current");
                _Current = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Current");
                OnCurrentChanged();
            }
        }
        private global::System.Int32 _Current;
        partial void OnCurrentChanging(global::System.Int32 value);
        partial void OnCurrentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single Coefficient
        {
            get
            {
                return _Coefficient;
            }
            set
            {
                OnCoefficientChanging(value);
                ReportPropertyChanging("Coefficient");
                _Coefficient = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Coefficient");
                OnCoefficientChanged();
            }
        }
        private global::System.Single _Coefficient;
        partial void OnCoefficientChanging(global::System.Single value);
        partial void OnCoefficientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RepeatingID
        {
            get
            {
                return _RepeatingID;
            }
            set
            {
                OnRepeatingIDChanging(value);
                ReportPropertyChanging("RepeatingID");
                _RepeatingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RepeatingID");
                OnRepeatingIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RepeatingID;
        partial void OnRepeatingIDChanging(Nullable<global::System.Int32> value);
        partial void OnRepeatingIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_TasksFields", "Field")]
        public Field Field
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("DBModel.FK_TasksFields", "Field").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("DBModel.FK_TasksFields", "Field").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Field> FieldReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Field>("DBModel.FK_TasksFields", "Field");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Field>("DBModel.FK_TasksFields", "Field", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_LoggedWorks_Tasks", "LoggedWork")]
        public EntityCollection<LoggedWork> LoggedWork
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LoggedWork>("DBModel.FK_LoggedWorks_Tasks", "LoggedWork");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LoggedWork>("DBModel.FK_LoggedWorks_Tasks", "LoggedWork", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_TasksWeeks", "Week")]
        public Week Week
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Week>("DBModel.FK_TasksWeeks", "Week").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Week>("DBModel.FK_TasksWeeks", "Week").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Week> WeekReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Week>("DBModel.FK_TasksWeeks", "Week");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Week>("DBModel.FK_TasksWeeks", "Week", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBModel", Name="Week")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Week : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Week object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static Week CreateWeek(global::System.Int32 id, global::System.Int32 year, global::System.Int32 number, global::System.Boolean active)
        {
            Week week = new Week();
            week.ID = id;
            week.Year = year;
            week.Number = number;
            week.Active = active;
            return week;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_Week", "CoefMapBundle")]
        public EntityCollection<FieldMap> FieldMaps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FieldMap>("DBModel.FK_Week", "CoefMapBundle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FieldMap>("DBModel.FK_Week", "CoefMapBundle", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_DayAchievements_Weels", "DayAchievement")]
        public EntityCollection<DayAchievement> DayAchievements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DayAchievement>("DBModel.FK_DayAchievements_Weels", "DayAchievement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DayAchievement>("DBModel.FK_DayAchievements_Weels", "DayAchievement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBModel", "FK_TasksWeeks", "Task")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("DBModel.FK_TasksWeeks", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("DBModel.FK_TasksWeeks", "Task", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
